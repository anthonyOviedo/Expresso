name: Build JAR -> Test JAR 

on:
  pull_request: 

env:
  APP_NAME: expressor
  MAIN_CLASS: com.diezam04.expresso.adapters.cli.Cli

jobs:
  build-cli-jar:
    runs-on: ubuntu-latest
    outputs:
      jar_name: ${{ steps.pick.outputs.jar_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
          cache: maven

      - name: Build with Maven
        run: mvn clean install -DskipTests
      
      - name: Pick main cli JAR
        id: pick
        run: |
          JAR=$(find expresso-cli/target -maxdepth 1 -type f -name '*-shaded.jar' | sort | head -n1)
          if [ -z "$JAR" ]; then
            JAR=$(find expresso-cli/target -maxdepth 1 -type f -name '*.jar' | sort | head -n1)
          fi
          if [ -z "$JAR" ]; then
            echo "No CLI jar found under expresso-cli/target" >&2
            ls expresso-cli/target >&2 || true
            exit 1
          fi
          echo "jar_name=$(basename "$JAR")" >> "$GITHUB_OUTPUT"

      - name: Test Cli JAR
        run: |
          echo "Testing ${{ steps.pick.outputs.jar_name }}"
          java -jar "expresso-cli/target/${{ steps.pick.outputs.jar_name }}"
          java -jar "expresso-cli/target/${{ steps.pick.outputs.jar_name }}" --help
          mkdir -p output
          java -jar "expresso-cli/target/${{ steps.pick.outputs.jar_name }}" transpile examples/HelloWorld0.expresso --out output --verbose
          java -jar "expresso-cli/target/${{ steps.pick.outputs.jar_name }}" build examples/HelloWorld0.expresso --out output --verbose
          java -jar "expresso-cli/target/${{ steps.pick.outputs.jar_name }}" run examples/HelloWorld0.expresso --out output --verbose

      - name: Package REST JAR
        run: mvn -pl expresso-rest -am -DskipTests package

      - name: Build Docker image
        run: |
          ls expresso-rest/target
          docker build -f dockerfile -t expresso-rest:ci .

      - name: Discord notify success (apps deployment)
        if: success()
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: |
            üñ•Ô∏è ‚úÖ Apps are tested and ready to be used .
            Commit `${{ github.sha }}`
            Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      # - name: Discord notify failure (apps deployment)
      #   if: failure()
      #   uses: Ilshidur/action-discord@0.3.2
      #   with:
      #     args: |
      #       üñ•Ô∏è ‚ùå Failed Testing in development.
      #       Commit `${{ github.sha }}`
      #       Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      #   env:
      #     DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }} 



 
