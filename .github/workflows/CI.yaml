name: CI

on:
  push:
    branches: [dev]

env:
  APP_NAME: expressor
  MAIN_CLASS: com.diezam04.expresso.adapters.cli.Cli
  VERSION: 3.1

jobs:
  build-jar:
    runs-on: ubuntu-latest
    outputs:
      cli_jar_name: ${{ steps.pick.outputs.cli_jar_name }}
      rest_jar_name: ${{ steps.pick.outputs.rest_jar_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
          cache: maven

      - name: Build and run unit tests
        run: mvn -B clean verify

      - name: Pick CLI jar
        id: pick
        run: |
          set -euo pipefail
          JAR=$(find expresso-cli/target -maxdepth 1 -type f -name '*-shaded.jar' | sort | head -n1)
          if [ -z "$JAR" ]; then
            JAR=$(find expresso-cli/target -maxdepth 1 -type f -name '*.jar' | sort | head -n1)
          fi
          if [ -z "$JAR" ]; then
            echo "No CLI jar found under expresso-cli/target" >&2
            ls expresso-cli/target >&2 || true
            exit 1
          fi
          echo "cli_jar_name=$(basename "$JAR")" >> "$GITHUB_OUTPUT"

      - name: Pick REST jar
        id: pick-rest
        run: |
          set -euo pipefail
          REST_JAR=$(find expresso-rest/target -maxdepth 1 -type f -name '*-shaded.jar' | sort | head -n1)
          if [ -z "$REST_JAR" ]; then
            REST_JAR=$(find expresso-rest/target -maxdepth 1 -type f -name '*.jar' | sort | head -n1)
          fi
          if [ -z "$REST_JAR" ]; then
            echo "No REST jar found under expresso-rest/target" >&2
            ls expresso-rest/target >&2 || true
            exit 1
          fi
          echo "rest_jar_name=$(basename "$REST_JAR")" >> "$GITHUB_OUTPUT"

      - name: Upload CLI jar
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.APP_NAME }}-${{ env.VERSION }}.jar"
          path: "expresso-cli/target/${{ steps.pick.outputs.cli_jar_name }}"
          if-no-files-found: error

      - name: Upload REST jar
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.APP_NAME }}-${{ env.VERSION }}-rest.jar"
          path: "expresso-rest/target/${{ steps.pick-rest.outputs.rest_jar_name }}"
          if-no-files-found: error

  test-cli-jar:
    needs: build-jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download CLI jar
        uses: actions/download-artifact@v4
        with:
          name: "${{ env.APP_NAME }}-${{ env.VERSION }}.jar"
          path: target

      - name: Smoke test CLI jar
        run: |
          set -euo pipefail
          CLI_JAR=$(find target -maxdepth 1 -name '*.jar' -print -quit)
          echo "Testing $CLI_JAR"
          java -jar "$CLI_JAR" --help
          mkdir -p output
          java -jar "$CLI_JAR" transpile examples/HelloWorld0.expresso --out output --verbose
          java -jar "$CLI_JAR" build examples/HelloWorld0.expresso --out output --verbose
          java -jar "$CLI_JAR" run examples/HelloWorld0.expresso --out output --verbose

  test-rest-jar:
    needs: build-jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download REST jar
        uses: actions/download-artifact@v4
        with:
          name: "${{ env.APP_NAME }}-${{ env.VERSION }}-rest.jar"
          path: target

      - name: Health-check REST service
        run: |
          set -euo pipefail
          REST_JAR=$(find target -maxdepth 1 -name '*.jar' -print -quit)
          echo "Launching $REST_JAR"
          export SERVER_PORT=8081
          java -jar "$REST_JAR" >/tmp/rest.log 2>&1 &
          PID=$!
          cleanup() {
            kill $PID >/dev/null 2>&1 || true
            wait $PID 2>/dev/null || true
            tail -n 100 /tmp/rest.log || true
          }
          trap cleanup EXIT
          for _ in $(seq 1 30); do
            if curl -sSf "http://127.0.0.1:${SERVER_PORT}/api/v1/health" | grep -q 'ok'; then
              echo "REST healthcheck passed"
              exit 0
            fi
            sleep 2
          end
