name: Build JAR, then package (.deb / .msi)

on:
  push:
    branches: [ 34-crear-java-image ]
  pull_request:

env:
  APP_NAME: Expressor
  MAIN_CLASS: com.diezam04.expresso.Expressor

jobs:
  build-jar:
    runs-on: ubuntu-latest
    outputs:
      jar_name: ${{ steps.pick.outputs.jar_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
          cache: maven

      - name: Build with Maven
        run: mvn -B -DskipTests package

      - name: Pick main JAR (prefer *-runner.jar)
        id: pick
        shell: bash
        run: |
          set -e
          jar=$(ls -1 target/*-runner.jar 2>/dev/null || true)
          if [ -z "$jar" ]; then jar=$(ls -1 target/*.jar | head -n1); fi
          test -n "$jar" || { echo "No JAR found in target/"; exit 1; }
          echo "Picked: $(basename "$jar")"
          echo "jar_name=$(basename "$jar")" >> "$GITHUB_OUTPUT"

      - name: Upload JARs
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar
          if-no-files-found: error

  package-deb:
      needs: build-jar
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
  
      - name: Set up Temurin JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
  
      - name: Install jpackage deps (deb)
        run: |
          sudo apt-get update
          sudo apt-get install -y fakeroot dpkg-dev binutils file desktop-file-utils
  
      - name: Download JARs
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target
  
      - name: jpackage -> .deb (no prefix fakeroot)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          jpackage \
            --type deb \
            --name "${APP_NAME}" \
            --input target \
            --main-jar "${{ needs.build-jar.outputs.jar_name }}" \
            --main-class "${MAIN_CLASS}" \
            --dest dist \
            --app-version 1.0 \
            --linux-deb-maintainer "Expresso Team <antony@hotmail.com>" \
            --verbose
          ls -l dist
  
      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: dist/*.deb
          if-no-files-found: error



  package-msi:
    needs: build-jar
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'

      - name: Install WiX Toolset (required for MSI)
        shell: powershell
        run: |
          choco install wixtoolset -y
          $wixBin = "${env:ProgramFiles(x86)}\WiX Toolset v3.11\bin"
          if (Test-Path $wixBin) { $wixBin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append }

      - name: Download JARs
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target

      - name: jpackage -> .msi
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          jpackage `
            --type msi `
            --name "$env:APP_NAME" `
            --input target `
            --main-jar "${{ needs.build-jar.outputs.jar_name }}" `
            --main-class "$env:MAIN_CLASS" `
            --dest dist
          # Extras opcionales:
          #  --win-menu `
          #  --win-shortcut `
          #  --vendor "Tu Organizaci√≥n" `
          #  --icon path\to\icon.ico

      - name: Upload .msi artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: dist/*.msi
          if-no-files-found: error
