flowchart TD
  %% =========================
  %% Sección: Build local
  %% =========================
  subgraph Dev["Máquina de Desarrollo"]
    A["our.java\ncódigo fuente (Java 23)"]
    DF["Dockerfile\nmulti-stage: build + run"]

    A --> DF

    subgraph BuildStage["Stage 1: build"]
      B1["javac\ncompila a .class"]
      B2["jar --create --main-class\nempaqueta JAR ejecutable"]
      B1 --> B2
    end

    DF --> B1
    B2 -->|artefacto| JAR[(app.jar)]
  end

  %% Imagen de Docker y Push
  JAR --> C["docker build\ncrea imagen con JAR"]
  C --> IMG[(Docker Image)]
  IMG -->|docker push| DHUB[("Docker Hub\nregistro de imágenes")]

  %% =========================
  %% Sección: Infraestructura
  %% =========================
  subgraph HETZ["Servidor Hetzner (único nodo)"]
    direction TB

    subgraph RP["Nginx Reverse Proxy (host)"]
      NGINX["Nginx"]
      CERT["Certbot / Let's Encrypt\nSSL/TLS"]
      CERT -. "gestiona certificados" .- NGINX
    end

    subgraph SWARM["Docker Swarm (1 manager)"]
      NET["Overlay/Ingress interno"]
      SVC["Servicio/Stack\ncontenedor ejecutando app.jar"]
      NET --- SVC
    end

    PULL["docker service update/create\npull desde Docker Hub"]
  end

  %% Relaciones entre bloques de infra
  DHUB -->|pull| PULL
  PULL --> SVC
  NGINX -->|proxy_pass| SVC

  %% =========================
  %% Flujo de Usuario
  %% =========================
  USER["Usuario/Cliente"]
  INTERNET[(Internet)]
  USER --> INTERNET -->|HTTPS :443| NGINX
  NGINX -->|HTTP interno| SVC

  %% Notas/Relaciones
  DF -. "define" .-> B1
  IMG -. "contiene" .-> JAR
